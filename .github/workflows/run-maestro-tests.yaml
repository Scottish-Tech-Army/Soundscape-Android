name: Run Maestro tests

env:
  # The name of the main module repository
  main_project_module: app

  # The name in the Play Store
  playstore_name: Soundscape

on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ "main", "test-tags" ]

jobs:
  maestro-test:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '19'

      - name: Setup tile and search providers
        env:
          TILE_PROVIDER_API_KEY: ${{ secrets.TILE_PROVIDER_API_KEY }}
          TILE_PROVIDER_URL: ${{ secrets.TILE_PROVIDER_URL }}
          SEARCH_PROVIDER_API_KEY: ${{ secrets.SEARCH_PROVIDER_API_KEY }}
          SEARCH_PROVIDER_URL: ${{ secrets.SEARCH_PROVIDER_URL }}
        run: |
          echo tileProviderUrl="$TILE_PROVIDER_URL" > local.properties
          echo tileProviderApiKey="$TILE_PROVIDER_API_KEY" >> local.properties
          echo searchProviderUrl="$SEARCH_PROVIDER_URL" >> local.properties
          echo searchProviderApiKey="$SEARCH_PROVIDER_API_KEY" >> local.properties

      - name: Build debug version
        run: ./gradlew assembleDebug

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install Maestro
        run: MAESTRO_VERSION=1.40.3 curl -Ls 'https://get.maestro.mobile.dev' | bash

      - name: Maestro Tests
        id: maestro-tests
        uses: reactivecircus/android-emulator-runner@v2
        continue-on-error: true # IMPORTANT: allow pipeline to continue to Android Test Report step
        with:
          api-level: 34
          arch: x86_64
          ram-size: 2048M
          enable-hw-keyboard: false
          target: default
          script: |
            adb logcat -c                             # clear logs
            touch app/emulator.log                    # create log file
            chmod 777 app/emulator.log                # allow writing to log file
            adb logcat >> app/emulator.log &          # pipe all logcat messages into log file as a background process
            adb install app/build/outputs/apk/debug/app-debug.apk
            mkdir maestro_outputs
            $HOME/.maestro/bin/maestro test --format=junit --output=report1.xml --test-output-dir=maestro_outputs --no-ansi maestro/Onboarding.yaml
            $HOME/.maestro/bin/maestro test --format=junit --output=report2.xml --test-output-dir=maestro_outputs --no-ansi maestro/HomePage.yaml
            $HOME/.maestro/bin/maestro test --format=junit --output=report3.xml --test-output-dir=maestro_outputs --no-ansi maestro/LocationDetails.yaml
            $HOME/.maestro/bin/maestro test --format=junit --output=report4.xml --test-output-dir=maestro_outputs --no-ansi maestro/PlacesNearby.yaml

      - name: Upload maestro reports
        uses: actions/upload-artifact@v4
        with:
          name: maestro-reports
          path: maestro_outputs

      - name: Upload Failing Test Report Log
        if: steps.maestro-tests.outcome != 'success'        # upload the generated log on failure of the tests job
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: app/emulator.log # path to where the log is

      - name: Raise error on test fail # set a red tick on the workflow run if the tests failed
        if: steps.maestro-tests.outcome != 'success'
        run: exit 1