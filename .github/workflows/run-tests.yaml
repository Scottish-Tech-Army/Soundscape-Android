name: Run tests

env:
  # The name of the main module repository
  main_project_module: app

  # The name in the Play Store
  playstore_name: Soundscape

on:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '19'

      - name: Setup offline maps for tests
        run: |
          pwd 
          ls -l ${{ env.main_project_module }}/src/test/res/org/scottishtecharmy/soundscape
          wget --no-verbose --show-progress --progress=dot:giga https://commcouncil.scot/cardiff-united-kingdom.pmtiles -O ${{ env.main_project_module }}/src/test/res/org/scottishtecharmy/soundscape/cardiff-united-kingdom.pmtiles
          wget --no-verbose --show-progress --progress=dot:giga https://commcouncil.scot/glasgow-united-kingdom.pmtiles -O ${{ env.main_project_module }}/src/test/res/org/scottishtecharmy/soundscape/glasgow-united-kingdom.pmtiles
          wget --no-verbose --show-progress --progress=dot:giga https://commcouncil.scot/manchester-united-kingdom.pmtiles -O ${{ env.main_project_module }}/src/test/res/org/scottishtecharmy/soundscape/manchester-united-kingdom.pmtiles
          ls -l ${{ env.main_project_module }}/src/test/res/org/scottishtecharmy/soundscape

#      Setting up the tile and search providers from secrets won't work for runners which are
#      triggered from forks e.g. to test a pull request. The tests that require tiles check if the
#      tile provider exists, so we leave in this code so that if it's triggered by "Run workflow"
#      the tile provider will be available.

      - name: Setup tile and search providers
        env:
          TILE_PROVIDER_API_KEY: ${{ secrets.TILE_PROVIDER_API_KEY }}
          TILE_PROVIDER_URL: ${{ secrets.TILE_PROVIDER_URL }}
          SEARCH_PROVIDER_API_KEY: ${{ secrets.SEARCH_PROVIDER_API_KEY }}
          SEARCH_PROVIDER_URL: ${{ secrets.SEARCH_PROVIDER_URL }}
        run: |
          echo tileProviderUrl="$TILE_PROVIDER_URL" > local.properties
          echo tileProviderApiKey="$TILE_PROVIDER_API_KEY" >> local.properties
          echo searchProviderUrl="$SEARCH_PROVIDER_URL" >> local.properties
          echo searchProviderApiKey="$SEARCH_PROVIDER_API_KEY" >> local.properties

      - name: Run lint over the repo
        run: ./gradlew lint

      - name: Run tests
        run: ./gradlew test

      - name: Generate screenshots
        continue-on-error: true # The screenshots are unreliable, awaiting Google fix
        run : ./gradlew  updateDebugScreenshotTest

      - name: Build debug version
        run: ./gradlew assembleDebug

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Instrumentation Tests
        id: instrumentation-tests
        uses: reactivecircus/android-emulator-runner@v2
        continue-on-error: true # IMPORTANT: allow pipeline to continue to Android Test Report step
        with:
          api-level: 34
          target: default
          arch: x86_64
          script: |
            adb logcat -c                             # clear logs
            touch app/emulator.log                    # create log file
            chmod 777 app/emulator.log                # allow writing to log file
            adb logcat >> app/emulator.log &          # pipe all logcat messages into log file as a background process
            ./gradlew connectedCheck

      - name: Upload Failing Test Report Log
        if: steps.instrumentation-tests.outcome != 'success'        # upload the generated log on failure of the tests job
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: app/emulator.log # path to where the log is

      - name: Raise error on test fail # set a red tick on the workflow run if the tests failed
        if: steps.instrumentation-tests.outcome != 'success'
        run: exit 1